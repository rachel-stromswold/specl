center = 50
norm_denom = 2*4^2
dx = 0.1

//math tests
xs = range(0, 2*center, dx)
ys = [math.exp(-(x-center)^2)/norm_denom for x in xs]
dys_2 = [ys[i+1] - 2*ys[i] + ys[i-1] for i in range(1, len(xs)-1)]
print("g[50] = %, d^2 g[50] = %\n", ys[50], dys_2[50])

//list assignment
foo = [1, 2, 3, 4]
foo[0] = 2
assert(foo[0] == 2)

//operations
num_add = +1
assert(num_add == 1)
num_add = 2+1
assert(num_add == 3)
array_add = vec(1,2,3)+vec(3,2,1)
print("array_add = %\n", array_add)
assert(array_add[0] == 4 && array_add[1] == 4 && array_add[2] == array_add[0])
array_add += 2
print("array_add = %\n", array_add)
assert(array_add[0] == 6 && array_add[1] == 6 && array_add[2] == array_add[0])

num_sub = -1
assert(num_add == -1)
num_sub = 1-2
assert(num_add == -1)
array_sub = vec(1,2,3)-vec(3,2,1)
print("array_sub = %\n", array_sub)
assert(array_sub[0] == -2 && array_sub[1] == 0 && array_sub[2] == 2)
array_add -= 2
print("array_sub = %\n", array_sub)
assert(array_sub[0] == -4 && array_sub[1] == -2 && array_sub[2] == 0)

num_mul = 2*3
assert(num_add == 6)
array_mul = vec(1,2,3)*vec(3,2,1)
print("array_mul = %\n", array_mul)
assert(array_mul[0] == 3 && array_mul[1] == 4 && array_mul[2] == 3)
array_mul *= 2
print("array_mul = %\n", array_mul)
assert(array_mul[0] == 6 && array_mul[1] == 8 && array_mul[2] == 6)

num_div = 3/2
assert(num_add == 1.5)
array_div = vec(12,4,1)/vec(3,2,1)
print("array_div = %\n", array_div)
assert(array_div[0] == 4 && array_div[1] == 2 && array_div[2] == 1)
array_div /= 2
print("array_div = %\n", array_div)
assert(array_div[0] == 6 && array_div[1] == 1 && array_div[2] == 0.5)

num_exp = 2^3
assert(num_exp == 8)
array_exp = vec(1,2,3)^vec(1,2,3)
print("array_exp = %\n", array_exp)
assert(array_exp[0] == 1 && array_exp[1] == 4 && array_exp[2] == 27)
array_exp ^= 2
print("array_exp = %\n", array_exp)
assert(array_exp[0] == 1 && array_exp[1] == 16 && array_exp[2] == 729)

str_add = "foo"+"bar"
assert(typeof(foo) != "error")
assert(foo == "foobar")
